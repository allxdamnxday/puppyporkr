name: Continuous Integration and Deployment

# Controls when the workflow will run
on:
  push:
    branches: [ main ] # Trigger on pushes to the main branch
  pull_request:
    branches: [ main ] # Also trigger on pull requests targeting main

jobs:
  # This job builds the Docker images to verify the Docker setup
  build_docker_images:
    name: Build Docker Images
    runs-on: ubuntu-latest # Use the latest Ubuntu runner

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE so your job can access it
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Docker Buildx for improved build capabilities
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Build the Docker images using docker-compose
      # This step verifies that the Dockerfiles and docker-compose.yml are configured correctly
      # and that the application images can be built successfully.
      # We don't push the images anywhere in this basic CI setup.
      - name: Build images with Docker Compose
        run: docker compose build

  # Deploy the backend to Vercel
  deploy_backend:
    name: Deploy Backend to Vercel
    runs-on: ubuntu-latest
    needs: build_docker_images
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install Vercel CLI
        run: npm install -g vercel
        
      - name: Deploy to Vercel
        run: |
          cd backend
          vercel --prod --token ${{ secrets.VERCEL_TOKEN }} --yes
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_BACKEND_PROJECT_ID }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}

  # Deploy the frontend to Vercel
  deploy_frontend:
    name: Deploy Frontend to Vercel
    runs-on: ubuntu-latest
    needs: build_docker_images
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install Vercel CLI
        run: npm install -g vercel
        
      - name: Deploy to Vercel
        run: |
          cd frontend
          vercel --prod --token ${{ secrets.VERCEL_TOKEN }} --yes
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_FRONTEND_PROJECT_ID }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
